@import "shared/utils/colors.scss";
@import "shared/utils/responsive.module.scss";

.center {
  display: flex;
  align-items: center;
  gap: 20px;
}

.featureListContainer {
  overflow-x: auto !important;
  display: flex;
  align-items: center;
  @include responsiveProperty(
    (
      "height": 330,
    )
  );
  -ms-overflow-style: none !important;
  scrollbar-width: none !important;
  &::-webkit-scrollbar {
    display: none;
  }
  position: relative;
  scroll-behavior: smooth;
}

.featureCard {
  @include responsiveProperty(
    (
      "min-height": 286,
      "max-height": 286,
      "min-width": 848,
      "max-width": 848,
      "border-radius": 18,
    )
  );
  height: 100%;
  width: 100%;
  background-color: white;
  box-shadow: 0px 4px 19px 0px rgba(0, 0, 0, 0.16);
  position: relative;
}

.imgContainer {
  @include responsiveProperty(
    (
      "min-height": 286,
      "max-height": 286,
      "min-width": 848,
      "max-width": 848,
      "border-radius": 18,
    )
  );
  height: 100%;
  width: 100%;
  object-fit: contain;
}

.btnContainer {
  @include responsiveProperty(
    (
      "height": 47,
      "width": 162,
      "font-size": 16,
      "bottom": 20,
      "left": 20,
    )
  );
  position: absolute !important;
  background-color: $Secondary !important;
}

.leftArrowContainer2 {
  @include responsiveProperty(
    (
      "height": 72,
      "width": 72,
      "left": -20,
    )
  );
  border-radius: 100%;
  position: absolute;
  top: 50%;
  transform: translate(0%, -50%);
  background-color: white;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid $BorderGray;
  cursor: pointer;
  box-shadow: 0px 5.14286px 24.42857px 0px rgba(0, 0, 0, 0.16);
}

.leftArrowContainer {
  @include responsiveProperty(
    (
      "height": 72,
      "width": 72,
      "left": 20,
    )
  );
  border-radius: 100%;
  position: absolute;
  top: 50%;
  transform: translate(0%, -50%);
  background-color: white;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid $BorderGray;
  cursor: pointer;
  box-shadow: 0px 5.14286px 24.42857px 0px rgba(0, 0, 0, 0.16);
}

.rightArrowContainer {
  @include responsiveProperty(
    (
      "height": 72,
      "width": 72,
      "right": 20,
    )
  );
  border-radius: 100%;
  position: absolute;
  top: 50%;
  transform: translate(0%, -50%);
  background-color: white;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid $BorderGray;
  cursor: pointer;
  box-shadow: 0px 5.14286px 24.42857px 0px rgba(0, 0, 0, 0.16);
}

.rightArrowContainer2 {
  @include responsiveProperty(
    (
      "height": 72,
      "width": 72,
      "right": -20,
    )
  );
  border-radius: 100%;
  position: absolute;
  top: 50%;
  transform: translate(0%, -50%);
  background-color: white;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid $BorderGray;
  cursor: pointer;
  box-shadow: 0px 5.14286px 24.42857px 0px rgba(0, 0, 0, 0.16);
}

.arrowIcon {
  @include responsiveProperty(
    (
      "height": 28,
      "width": 28,
    )
  );
  path {
    fill: black;
  }
}

.active {
  background-color: $DARK_GREEN;
  border-color: $DARK_GREEN;
  .arrowIcon path {
    fill: white;
  }
}

@media (max-width: 576px) {
  .featureListContainer {
    height: calculatePixels(576, 380) !important;
  }
  .featureCard {
    min-height: calculatePixels(576, 286) !important;
    max-height: calculatePixels(576, 286) !important;
    min-width: calculatePixels(576, 848) !important;
    max-width: calculatePixels(576, 848) !important;
    border-radius: calculatePixels(576, 18) !important;
  }
  .imgContainer {
    min-height: calculatePixels(576, 286) !important;
    max-height: calculatePixels(576, 286) !important;
    min-width: calculatePixels(576, 848) !important;
    max-width: calculatePixels(576, 848) !important;
    border-radius: calculatePixels(576, 18) !important;
  }
  .btnContainer {
    height: calculatePixels(576, 47) !important;
    width: calculatePixels(576, 162) !important;
    font-size: calculatePixels(576, 16) !important;
    bottom: calculatePixels(576, 20) !important;
    left: calculatePixels(576, 20) !important;
  }
  .leftArrowContainer {
    height: calculatePixels(576, 72) !important;
    width: calculatePixels(576, 72) !important;
    left: calculatePixels(576, 20) !important;
  }
  .rightArrowContainer {
    height: calculatePixels(576, 72) !important;
    width: calculatePixels(576, 72) !important;
    right: calculatePixels(576, 20) !important;
  }
  .arrowIcon {
    height: calculatePixels(576, 28) !important;
    width: calculatePixels(576, 28) !important;
  }
}

@media (min-width: 576px) and (max-width: 992px) {
  .featureListContainer {
    height: calculatePixels(768, 380) !important;
  }
  .featureCard {
    min-height: calculatePixels(768, 286) !important;
    max-height: calculatePixels(768, 286) !important;
    min-width: calculatePixels(768, 848) !important;
    max-width: calculatePixels(768, 848) !important;
    border-radius: calculatePixels(768, 18) !important;
  }
  .imgContainer {
    min-height: calculatePixels(768, 286) !important;
    max-height: calculatePixels(768, 286) !important;
    min-width: calculatePixels(768, 848) !important;
    max-width: calculatePixels(768, 848) !important;
    border-radius: calculatePixels(768, 18) !important;
  }
  .btnContainer {
    height: calculatePixels(768, 47) !important;
    width: calculatePixels(768, 162) !important;
    font-size: calculatePixels(768, 16) !important;
    bottom: calculatePixels(768, 20) !important;
    left: calculatePixels(768, 20) !important;
  }
  .leftArrowContainer {
    height: calculatePixels(768, 72) !important;
    width: calculatePixels(768, 72) !important;
    left: calculatePixels(768, 20) !important;
  }
  .rightArrowContainer {
    height: calculatePixels(768, 72) !important;
    width: calculatePixels(768, 72) !important;
    right: calculatePixels(768, 20) !important;
  }
  .arrowIcon {
    height: calculatePixels(768, 28) !important;
    width: calculatePixels(768, 28) !important;
  }
}
